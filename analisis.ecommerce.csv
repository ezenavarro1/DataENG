{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ezenavarro1/DataENG/blob/main/analisis.ecommerce.csv\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "zpwQxHb0MkP9"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import requests #LIBRERIA PARA CONSULTAR WEBS\n",
        "import json\n",
        "from bs4 import BeautifulSoup #HERRAMIENTA SOUP"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "lGVTBYFIMs-K"
      },
      "outputs": [],
      "source": [
        "url = 'https://raw.githubusercontent.com/ezenavarro1/DataENG/main/codebar.csv'\n",
        "df = pd.read_csv(url)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "oSkVLOiu2hd2",
        "outputId": "3267a2c2-fe3a-4772-f6a9-8a9b7c6fd97c"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           code_bar                           name       pvp\n",
              "0     7795371459443         ULTRAFLEX LATA X 300 G   8682.12\n",
              "1     7509552843620   DERMO EXPERT REV HIALU SERUM   7313.00\n",
              "2     3337875543248          VICHY MINERAL 89 X 50  13750.00\n",
              "3     3337875583626           HYALU B5 SERUM X30ML  19800.00\n",
              "4     7795323002420   NUTRILON PROFU 1 LATA X800GR   7831.00\n",
              "...             ...                            ...       ...\n",
              "1304   614143473463               OMEGAN CAPS X 30   2423.68\n",
              "1305  8710428019516   ENSURE ADVANCE CAF BOTX220ML   1386.38\n",
              "1306  8427030008028  ENSURE ADVANCE FR-BA PVOX400G   6352.81\n",
              "1307  8710428013514  ENSURE CLINICAL RTH ENVX500ML   5351.73\n",
              "1308  8886451005656  PEDIASURE CHOCOLAT LATA X400G   4626.25\n",
              "\n",
              "[1309 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-021ae5bb-a31d-4196-b89e-021084e43ea4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_bar</th>\n",
              "      <th>name</th>\n",
              "      <th>pvp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7795371459443</td>\n",
              "      <td>ULTRAFLEX LATA X 300 G</td>\n",
              "      <td>8682.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7509552843620</td>\n",
              "      <td>DERMO EXPERT REV HIALU SERUM</td>\n",
              "      <td>7313.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3337875543248</td>\n",
              "      <td>VICHY MINERAL 89 X 50</td>\n",
              "      <td>13750.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3337875583626</td>\n",
              "      <td>HYALU B5 SERUM X30ML</td>\n",
              "      <td>19800.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7795323002420</td>\n",
              "      <td>NUTRILON PROFU 1 LATA X800GR</td>\n",
              "      <td>7831.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1304</th>\n",
              "      <td>614143473463</td>\n",
              "      <td>OMEGAN CAPS X 30</td>\n",
              "      <td>2423.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1305</th>\n",
              "      <td>8710428019516</td>\n",
              "      <td>ENSURE ADVANCE CAF BOTX220ML</td>\n",
              "      <td>1386.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1306</th>\n",
              "      <td>8427030008028</td>\n",
              "      <td>ENSURE ADVANCE FR-BA PVOX400G</td>\n",
              "      <td>6352.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1307</th>\n",
              "      <td>8710428013514</td>\n",
              "      <td>ENSURE CLINICAL RTH ENVX500ML</td>\n",
              "      <td>5351.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1308</th>\n",
              "      <td>8886451005656</td>\n",
              "      <td>PEDIASURE CHOCOLAT LATA X400G</td>\n",
              "      <td>4626.25</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1309 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-021ae5bb-a31d-4196-b89e-021084e43ea4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-021ae5bb-a31d-4196-b89e-021084e43ea4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-021ae5bb-a31d-4196-b89e-021084e43ea4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "uGa6rV9MN3Hf"
      },
      "outputs": [],
      "source": [
        "lista_codebar= df[\"code_bar\"]\n",
        "\n",
        "lista_url_code = []\n",
        "lista_url_code = ['https://api.mercadolibre.com/products/search?status=active&site_id=MLA&product_identifier='+ str(i) for i in lista_codebar]\n",
        "\n",
        "df[\"url_code\"] = pd.DataFrame(lista_url_code)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "n6-_4y1CRPOD"
      },
      "outputs": [],
      "source": [
        "mla_catalogo = []\n",
        "mla_catalogo = ['Null' if requests.get(i).json()['results'] == [] else requests.get(i).json()['results'][0]['id'] for i in lista_url_code]\n",
        "df[\"mla\"] = pd.DataFrame(mla_catalogo)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "nvxs0vgwRUJ6"
      },
      "outputs": [],
      "source": [
        "lista_url_mla= []\n",
        "lista_url_mla = ['https://api.mercadolibre.com/products/'+ str(i)+'/items' for i in mla_catalogo]\n",
        "df[\"url_mla\"] = pd.DataFrame(lista_url_mla)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "51AEhw5iRZ67"
      },
      "outputs": [],
      "source": [
        "prices1 = []\n",
        "sellers1 = []\n",
        "ureles = df['url_mla']\n",
        "\n",
        "prices1 = [requests.get(i).json()['results'][0]['price'] if list(requests.get(i).json().keys())[0] == 'paging' else 'Null' for i in ureles]\n",
        "sellers1 = [requests.get(i).json()['results'][0]['seller_id'] if list(requests.get(i).json().keys())[0] == 'paging' else 'Null' for i in ureles]\n",
        "\n",
        "df['price 1'] = pd.DataFrame(prices1)\n",
        "df['seller 1'] = pd.DataFrame(sellers1)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "list(df)"
      ],
      "metadata": {
        "id": "jJmPEJCIxzG8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "81bd8a5e-f603-4a75-a339-99b77c6bcb92"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['code_bar',\n",
              " 'name',\n",
              " 'pvp',\n",
              " 'url_code',\n",
              " 'mla',\n",
              " 'url_mla',\n",
              " 'price 1',\n",
              " 'seller 1']"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('analisis.ecommerce.csv')"
      ],
      "metadata": {
        "id": "2j2GbGUMRjpi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "renames = {'price 1': 'price_1', 'seller 1': 'seller_1'}\n",
        "df = df.rename(columns=renames)"
      ],
      "metadata": {
        "id": "e5zOiiiUq7sB"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "list(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e-0oONOtRvlJ",
        "outputId": "af86ead0-b83f-4dbd-8b18-ca06d3d1aa63"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['code_bar', 'name', 'pvp', 'mla', 'price_1', 'seller_1']"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[['code_bar', 'name','mla', 'price_1', 'seller_1']]"
      ],
      "metadata": {
        "id": "YuK35QYzRxCR"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('analisis.ecommerce.csv')"
      ],
      "metadata": {
        "id": "dJDL5n36R3Wi"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "La funcion de este script es, tras pasarle codigos de barra de distintos productos, extraer su MLA de catalogo en mercado libre si es que pertenece a uno de ellos Tras ello, se conecta con la api utilizando el endpoint para extraer el mejor precio de cada catalogo y el id del vendedor."
      ],
      "metadata": {
        "id": "Ae_-kh5ArPBK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install psycopg2-binary\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3GLE8ArZf0wH",
        "outputId": "8bc2a83f-7a0c-48ca-893b-6ed67e217662"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting psycopg2-binary\n",
            "  Downloading psycopg2_binary-2.9.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/3.0 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.3/3.0 MB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m44.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m34.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: psycopg2-binary\n",
            "Successfully installed psycopg2-binary-2.9.6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import psycopg2"
      ],
      "metadata": {
        "id": "8UK00Dfifu-X"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "conn = psycopg2.connect(\"dbname='data-engineer-database' user='ezenavarro511_coderhouse' password='o204GOvJcY' host='data-engineer-cluster.cyhh5bfevlmn.us-east-1.redshift.amazonaws.com' port='5439'\")\n"
      ],
      "metadata": {
        "id": "BwxpUbLZCI0B"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cursor = conn.cursor()\n",
        "cursor.execute(f\"\"\"\n",
        "  CREATE TABLE IF NOT EXISTS ezenavarro511_coderhouse.products_meli(\n",
        "  code_bar int distkey,\n",
        "  name VARCHAR(100) NOT NULL,\n",
        "  pvp int,\n",
        "  mla VARCHAR(15),\n",
        "  price_1 int,\n",
        "  seller_1 int\n",
        "\n",
        "  )sortkey(price_1);\n",
        "\"\"\")\n",
        "conn.commit()\n",
        "cursor.close()\n",
        "print(\"Table created!\")"
      ],
      "metadata": {
        "id": "QausqfoNAK3W",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "55e70402-ae70-4f69-ebcc-62c02b9bd9e0"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Table created!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cursor = conn.cursor()\n",
        "cursor.execute(\"\"\"\n",
        "SELECT *\n",
        "FROM products_meli;\n",
        "\"\"\")\n",
        "resultado = cursor.fetchall()\n",
        "cursor.close()\n",
        "\n",
        "if resultado:\n",
        "    print(\", \".join(map(lambda x: x[0], resultado)))\n",
        "else:\n",
        "    print(\"No se encontraron resultados.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S9PNOVNQl2m-",
        "outputId": "2424eac1-5c82-4f39-d29e-747890d6af5f"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "No se encontraron resultados.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se logro conectarse a la base de datos, queda pendiente la carga de valores dentro de la misma."
      ],
      "metadata": {
        "id": "PcjHnrQCryjQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "id": "2tDcq1F2mUHV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 651
        },
        "outputId": "cb03e77b-9ee1-4efe-b914-b3329f771836"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           code_bar                           name          mla price_1  \\\n",
              "0     7795371459443         ULTRAFLEX LATA X 300 G  MLA12247481    5770   \n",
              "1     7509552843620   DERMO EXPERT REV HIALU SERUM  MLA18956615    5119   \n",
              "2     3337875543248          VICHY MINERAL 89 X 50  MLA18964459   11000   \n",
              "3     3337875583626           HYALU B5 SERUM X30ML  MLA12754368   17500   \n",
              "4     7795323002420   NUTRILON PROFU 1 LATA X800GR   MLA9209971    6653   \n",
              "...             ...                            ...          ...     ...   \n",
              "1304   614143473463               OMEGAN CAPS X 30         Null    Null   \n",
              "1305  8710428019516   ENSURE ADVANCE CAF BOTX220ML         Null    Null   \n",
              "1306  8427030008028  ENSURE ADVANCE FR-BA PVOX400G         Null    Null   \n",
              "1307  8710428013514  ENSURE CLINICAL RTH ENVX500ML         Null    Null   \n",
              "1308  8886451005656  PEDIASURE CHOCOLAT LATA X400G  MLA21889429    4033   \n",
              "\n",
              "       seller_1  \n",
              "0     254425738  \n",
              "1     608885756  \n",
              "2     174313627  \n",
              "3     174313627  \n",
              "4     254425738  \n",
              "...         ...  \n",
              "1304       Null  \n",
              "1305       Null  \n",
              "1306       Null  \n",
              "1307       Null  \n",
              "1308  454912802  \n",
              "\n",
              "[1309 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-46a25215-9d77-4e25-b64e-12082dce0006\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>code_bar</th>\n",
              "      <th>name</th>\n",
              "      <th>mla</th>\n",
              "      <th>price_1</th>\n",
              "      <th>seller_1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7795371459443</td>\n",
              "      <td>ULTRAFLEX LATA X 300 G</td>\n",
              "      <td>MLA12247481</td>\n",
              "      <td>5770</td>\n",
              "      <td>254425738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7509552843620</td>\n",
              "      <td>DERMO EXPERT REV HIALU SERUM</td>\n",
              "      <td>MLA18956615</td>\n",
              "      <td>5119</td>\n",
              "      <td>608885756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3337875543248</td>\n",
              "      <td>VICHY MINERAL 89 X 50</td>\n",
              "      <td>MLA18964459</td>\n",
              "      <td>11000</td>\n",
              "      <td>174313627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3337875583626</td>\n",
              "      <td>HYALU B5 SERUM X30ML</td>\n",
              "      <td>MLA12754368</td>\n",
              "      <td>17500</td>\n",
              "      <td>174313627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7795323002420</td>\n",
              "      <td>NUTRILON PROFU 1 LATA X800GR</td>\n",
              "      <td>MLA9209971</td>\n",
              "      <td>6653</td>\n",
              "      <td>254425738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1304</th>\n",
              "      <td>614143473463</td>\n",
              "      <td>OMEGAN CAPS X 30</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1305</th>\n",
              "      <td>8710428019516</td>\n",
              "      <td>ENSURE ADVANCE CAF BOTX220ML</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1306</th>\n",
              "      <td>8427030008028</td>\n",
              "      <td>ENSURE ADVANCE FR-BA PVOX400G</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1307</th>\n",
              "      <td>8710428013514</td>\n",
              "      <td>ENSURE CLINICAL RTH ENVX500ML</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "      <td>Null</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1308</th>\n",
              "      <td>8886451005656</td>\n",
              "      <td>PEDIASURE CHOCOLAT LATA X400G</td>\n",
              "      <td>MLA21889429</td>\n",
              "      <td>4033</td>\n",
              "      <td>454912802</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1309 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46a25215-9d77-4e25-b64e-12082dce0006')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-46a25215-9d77-4e25-b64e-12082dce0006 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-46a25215-9d77-4e25-b64e-12082dce0006');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mpcHv_3CVbKL"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMBq9YwAD9citxJe85HJC/R",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}